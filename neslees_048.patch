diff --git a/README.txt b/README.txt
index b63d020..b18fab4 100644
--- a/README.txt
+++ b/README.txt
@@ -26,12 +26,17 @@ http://drupal.org/project/juicebox
 
 REQUIREMENTS
 ------------
-This module has dependency on file,image and libraries module.
+This module has dependency on file and image module.
 
 
 INSTALLATION
 ------------
-Install as normal (see http://drupal.org/documentation/install/modules-themes).
+1. Install as normal (see http://drupal.org/documentation/install/modules-themes).
+
+2. Download and unpack the Juicebox plugin in "libraries" inside root folder.
+   Make sure the path to the plugin file becomes:
+    "libraries/juicebox/juicebox.js"
+   Link: http://juicebox.net/
 
 
diff --git a/juicebox.module b/juicebox.module
index 8f832bd..ea48ef1 100644
--- a/juicebox.module
+++ b/juicebox.module
@@ -53,70 +53,96 @@ function juicebox_theme_suggestions_field_alter(array &$suggestions, array $vari
 }
 
 /**
- * Implements hook_library_info_alter().
+ * Builds library variable depending on version of library in
+ * sites/all/libraries/juicebox or /library
+ * @param mixed $librarypath
+ * @param mixed $library
  */
-function juicebox_library_info_alter(&$libraries, $module) {
-  if ($module != 'juicebox') {
+function juicebox_build_library_array($librarypath, &$library)
+{
+  $options = [
+    'file' => 'juicebox.js',
+    'pattern' => '/Juicebox.([a-zA-Z]+[0-9\.\ -]+)/',
+    'lines' => 5,
+    'cols' => 200,
+  ];
+  $library['name'] = 'Juicebox';
+  $library['vendor url'] = 'http://www.juicebox.net/';
+  $library['download url'] = 'http://www.juicebox.net/download/';
+  $library['version arguments'] = [
+    'file' => 'juicebox.js',
+    'pattern' => '/Juicebox.([a-zA-Z]+[0-9\.\ -]+)/',
+    'lines' => 5
+  ];
+  $library['files'] = [
+    // Note that we do not want the Juicebox library javascript to be
+    // aggregated by Drupal (set preprocess option = FALSE). This is because
+    // some supporting library CSS files must be at a specific location
+    // RELATIVE to to the main js file. Aggregation breaks this.
+    'js' => ['juicebox.js' => ['preprocess' => FALSE, 'group' => JS_LIBRARY]]
+  ];
+  $library['module'] = 'juicebox';
+  $library['machine name'] = 'juicebox';
+  $library['path'] = '';
+  $library['library path'] = $librarypath;
+  $library['disallowed_conf'] = [];
+  $library['compatible_mimetypes'] = ['image/gif', 'image/jpeg', 'image/png'];
+  $library['base_languagelist'] = 'Show Thumbnails|Hide Thumbnails|Expand Gallery|Close Gallery|Open Image in New Window';
+  $file = DRUPAL_ROOT . $librarypath;
+  if (empty($options['file']) || !file_exists($file)) {
     return;
   }
-  // We don't currently have a way to process library details from Libraries
-  // API automatically, so extract a core library definition manually.
-  // see: https://www.drupal.org/node/2350877
-  if (isset($libraries['juicebox'])) {
-    $library = \Drupal::service('juicebox.formatter')->getLibrary();
-    if (!empty($library['installed']) && !empty($library['files']) && !empty($library['library path'])) {
-      foreach ($library['files'] as $type => $file) {
-        foreach ($file as $filename => $options) {
-          $uri = '/' . $library['library path'] . '/' . $filename;
-          $libraries['juicebox'][$type][$uri] = $options;
-        }
+  $file = fopen($file, 'r');
+  while ($options['lines'] && $line = fgets($file, $options['cols'])) {
+    if (preg_match($options['pattern'], $line, $version)) {
+      $library['version'] = $version[1];
+    }
+    $options['lines']--;
+  }
+  fclose($file);
+  $pro = FALSE;
+  $disallowed_conf = [];
+  if (!empty($library['version'])) {
+    // Check if this is a Pro version.
+    if (stripos($library['version'], "Pro") !== FALSE) {
+      $pro = "TRUE";
+    }
+    $version_number = 0;
+    $matches = [];
+    preg_match("/[0-9\.]+[^\.]$/u", $library['version'], $matches);
+    if (!empty($matches[0])) {
+      $version_number = $matches[0];
+    }
+    // Some options are not available as LITE options < v1.3.
+    if (!$pro && version_compare($version_number, '1.3', '<')) {
+      $disallowed_conf = array_merge($disallowed_conf, [
+        'jlib_textColor',
+        'jlib_thumbFrameColor',
+        'jlib_useFullscreenExpand',
+        'jlib_useThumbDots',
+      ]);
+    }
+    // Multisize features are only available in PRO >= v1.4.
+    if (!$pro || version_compare($version_number, '1.4', '<')) {
+      $disallowed_conf = array_merge($disallowed_conf, ['juicebox_multisize_image_style']);
+    }
+    // Set the correct languageList string.
+    if (version_compare($version_number, '1.4.0', '>=')) {
+      $library['base_languagelist'] .= '|Images';
+    }
+    if ($pro) {
+      $library['base_languagelist'] .= '|Next Image|Previous Image|Play Audio|Pause Audio|Show Information|Hide Information|Start AutoPlay|Stop AutoPlay|AutoPlay ON|AutoPlay OFF|Go Back|Buy this Image|Share on Facebook|Share on Twitter|Share on Google+|Share on Pinterest|Share on Tumblr|of';
+      if (version_compare($version_number, '1.5.0', '>=')) {
+        $library['base_languagelist'] .= '|Send Email|Download';
       }
     }
   }
-}
-
-/**
- * Implements hook_libraries_info().
- */
-function juicebox_libraries_info() {
-  $libraries['juicebox'] = [
-    'name' => 'Juicebox',
-    'vendor url' => 'http://www.juicebox.net/',
-    'download url' => 'http://www.juicebox.net/download/',
-    'version arguments' => [
-      'file' => 'juicebox.js',
-      'pattern' => '/Juicebox.([a-zA-Z]+[0-9\.\ -]+)/',
-      'lines' => 5,
-    ],
-    'files' => [
-      // Note that we do not want the Juicebox library javascript to be
-      // aggregated by Drupal (set preprocess option = FALSE). This is because
-      // some supporting library CSS files must be at a specific location
-      // RELATIVE to to the main js file. Aggregation breaks this.
-      'js' => ['juicebox.js' => ['preprocess' => FALSE, 'group' => JS_LIBRARY]],
-    ],
-    'callbacks' => [
-      'info' => ['juicebox_library_add_info'],
-      'post-detect' => ['juicebox_library_post_detect'],
-    ],
-  ];
-  return $libraries;
-}
-
-/**
- * Libraries API Info Callback.
- *
- * Add baseline variables to a Juicebox library array that are not version
- * specific but should always be defined. These values are generic to all
- * Juicebox libraries and may be referenced even when the local library info
- * cannot be loaded or is not used.
- *
- * @see juicebox_libraries_info()
- */
-function juicebox_library_add_info(&$library) {
-  $library['disallowed_conf'] = [];
-  $library['compatible_mimetypes'] = ['image/gif', 'image/jpeg', 'image/png'];
-  $library['base_languagelist'] = 'Show Thumbnails|Hide Thumbnails|Expand Gallery|Close Gallery|Open Image in New Window';
+  if ($pro) {
+    $library['pro'] = "Pro";
+  }
+  $library['disallowed_conf'] = $disallowed_conf;
+  $library['installed'] = TRUE;
+  return ($library);
 }
 
 /**
@@ -133,7 +159,7 @@ function juicebox_library_post_detect(&$library) {
   if (!empty($library['version'])) {
     // Check if this is a Pro version.
     if (stripos($library['version'], "Pro") !== FALSE) {
-      $pro = TRUE;
+      $pro = "TRUE";
     }
     // Get numeric part of the version statement.
     $version_number = 0;
@@ -166,8 +192,12 @@ function juicebox_library_post_detect(&$library) {
       }
     }
   }
-  $library['pro'] = $pro;
+  if ($pro) {
+    $library['pro'] = "Pro";
+  }
   $library['disallowed_conf'] = $disallowed_conf;
+  $library['installed'] = TRUE;
+  return($library);
 }
 
 /**
diff --git a/juicebox.services.yml b/juicebox.services.yml
index dfc093e..93de93c 100644
--- a/juicebox.services.yml
+++ b/juicebox.services.yml
@@ -1,4 +1,4 @@
 services:
   juicebox.formatter:
     class: Drupal\juicebox\JuiceboxFormatter
-    arguments: ['@config.factory', '@string_translation', '@url_generator', '@module_handler', '@path.current', '@request_stack']
+    arguments: ['@config.factory', '@string_translation', '@url_generator', '@module_handler', '@path.current', '@request_stack', '@messenger']
diff --git a/src/JuiceboxFormatter.php b/src/JuiceboxFormatter.php
index 385f603..520f2a5 100644
--- a/src/JuiceboxFormatter.php
+++ b/src/JuiceboxFormatter.php
@@ -2,6 +2,7 @@
 
 namespace Drupal\juicebox;
 
+use Drupal\Core\Messenger\MessengerInterface;
 use Symfony\Component\HttpFoundation\RequestStack;
 use Drupal\Core\Path\CurrentPathStack;
 use Drupal\Core\Config\ConfigFactoryInterface;
@@ -10,7 +11,6 @@ use Drupal\Core\Routing\UrlGeneratorInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Component\Utility\Html;
-use Drupal\Component\Utility\Unicode;
 use Drupal\file\FileInterface;
 use Drupal\image\Entity\ImageStyle;
 
@@ -68,6 +68,13 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
    */
   static protected $library = [];
 
+  /**
+   * The messenger service.
+   *
+   * @var \Drupal\Core\Messenger\MessengerInterface
+   */
+  protected $messenger;
+
   /**
    * Constructor.
    *
@@ -81,17 +88,20 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
    * @param \Drupal\Core\Extension\ModuleHandlerInterface $module_manager
    *   A module manager service.
    * @param \Drupal\Core\Path\CurrentPathStack $currentPathStack
-   *   A currnet path service.
+   *   A current path service.
    * @param \Symfony\Component\HttpFoundation\RequestStack $request_stack
    *   The Symfony request stack from which to extract the current request.
+   * @param \Drupal\Core\Messenger\MessengerInterface $messenger_interface
+   *   The messenger interface.
    */
-  public function __construct(ConfigFactoryInterface $config_factory, TranslationInterface $translation, UrlGeneratorInterface $url_generator, ModuleHandlerInterface $module_manager, CurrentPathStack $currentPathStack, RequestStack $request_stack) {
+  public function __construct(ConfigFactoryInterface $config_factory, TranslationInterface $translation, UrlGeneratorInterface $url_generator, ModuleHandlerInterface $module_manager, CurrentPathStack $currentPathStack, RequestStack $request_stack, MessengerInterface $messenger_interface) {
     $this->configFactory = $config_factory;
     $this->stringTranslation = $translation;
     $this->urlGenerator = $url_generator;
     $this->moduleManager = $module_manager;
     $this->currentPathStack = $currentPathStack;
     $this->request = $request_stack->getCurrentRequest();
+    $this->messenger = $messenger_interface;
   }
 
   /**
@@ -145,7 +155,6 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
       // local detection and build our own libraries array.
       $query = \Drupal::request()->query->all();
       if (!empty($query['jb-version']) && !$force_local) {
-        juicebox_library_info($library);
         $version_number = Html::escape($query['jb-version']);
         if (!empty($query['jb-pro'])) {
           $library['pro'] = TRUE;
@@ -154,14 +163,26 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
         else {
           $version = 'Lite';
         }
-        $library['version'] = $version . ' ' . $version_number;
-        juicebox_library_post_detect($library);
-      }
-      // Otherwise we just use the Libraries API to detect the local lib.
-      else {
-        $library = libraries_detect('juicebox');
       }
     }
+    // We "default" to sites/all/libraries and that will override
+    // anything in /libraries. Rationale is that sites/all/libraries
+    //  was the original location for these files theoretically,
+    // we could check the versions of both and pick the one
+    // with the highest version not sure the juice(box) is worth the squeeze.
+    if (file_exists(DRUPAL_ROOT . '/' . 'sites/all/libraries/juicebox/juicebox.js')) {
+      $librarypath = '/sites/all/libraries/juicebox/juicebox.js';
+    }
+    elseif (file_exists(DRUPAL_ROOT . '/' . 'libraries/juicebox/juicebox.js')) {
+      $librarypath = '/libraries/juicebox/juicebox.js';
+    }
+    if (isset($librarypath)) {
+      juicebox_build_library_array($librarypath, $library);
+    }
+    else {
+      $notification_top = t('The Juicebox Javascript library does not appear to be installed. Please download and install the most recent version of the Juicebox library.');
+      $this->messenger->addError($notification_top);
+    }
     return $library;
   }
 
@@ -368,7 +389,7 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
     ] as $name) {
       if (isset($settings[$name])) {
         $name_real = str_replace('jlib_', '', $name);
-        $gallery->addOption(Unicode::strtolower($name_real), trim(Html::escape($settings[$name])));
+        $gallery->addOption(mb_strtolower($name_real), trim(Html::escape($settings[$name])));
       }
     }
     // Get the bool options set via the GUI.
@@ -377,7 +398,7 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
     ] as $name) {
       if (isset($settings[$name])) {
         $name_real = str_replace('jlib_', '', $name);
-        $gallery->addOption(Unicode::strtolower($name_real), (!empty($settings[$name]) ? 'TRUE' : 'FALSE'));
+        $gallery->addOption(mb_strtolower($name_real), (!empty($settings[$name]) ? 'TRUE' : 'FALSE'));
       }
     }
     // Merge-in the manually assigned options making sure they take priority
@@ -393,7 +414,7 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
           $matches = [];
           preg_match('/^([A-Za-z0-9]+?)="([^"]+?)"$/u', $option, $matches);
           list($full_match, $name, $value) = $matches;
-          $gallery->addOption(Unicode::strtolower($name), Html::escape($value));
+          $gallery->addOption(mb_strtolower($name), Html::escape($value));
         }
       }
     }
@@ -446,7 +467,9 @@ class JuiceboxFormatter implements JuiceboxFormatterInterface {
     // If the library itself is not installed, display formal error message.
     else {
       $notification_top = t('The Juicebox Javascript library does not appear to be installed. Please download and install the most recent version of the Juicebox library.');
-      drupal_set_message($notification_top, 'error');
+      $this->messenger->addError($notification_top);
+      $form['#pre_render'] = ['juicebox_form_pre_render_fieldsets'];
+      return $form;
     }
     $form['juicebox_config'] = [
       '#type' => 'details',
